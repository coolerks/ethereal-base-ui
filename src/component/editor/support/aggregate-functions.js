export const functions = [
  { name: 'AVG', doc: 'avg(column)，计算指定列的平均值', support: ['MySQL', 'Oracle', 'PostgreSQL'] },
  { name: 'COUNT', doc: 'count(column|*), 返回指定列或行的计数', support: ['MySQL', 'Oracle', 'PostgreSQL'] },
  { name: 'MAX', doc: 'max(column)，找出指定列的最大值', support: ['MySQL', 'Oracle', 'PostgreSQL'] },
  { name: 'MIN', doc: 'min(column)，找出指定列的最小值', support: ['MySQL', 'Oracle', 'PostgreSQL'] },
  { name: 'SUM', doc: 'sum(column)，计算指定列的总和', support: ['MySQL', 'Oracle', 'PostgreSQL'] },
  { name: 'GROUP_CONCAT', doc: 'group_concat(column)，将列的值连接成字符串（MySQL 专用）', support: ['MySQL'] },
  { name: 'LISTAGG', doc: 'listagg(column, \',\')，将列的值连接成字符串（Oracle 专用）', support: ['Oracle'] },
  { name: 'STRING_AGG', doc: 'string_agg(column, \',\')，将列的值连接成字符串（PostgreSQL 专用）', support: ['PostgreSQL'] },
  { name: 'MEDIAN', doc: 'median(column)，计算中位数（Oracle 专用）', support: ['Oracle'] },
  { name: 'VAR_POP', doc: 'var_pop(column)，计算总体方差', support: ['MySQL', 'Oracle', 'PostgreSQL'] },
  { name: 'VAR_SAMP', doc: 'var_samp(column)，计算样本方差', support: ['MySQL', 'Oracle', 'PostgreSQL'] },
  { name: 'STDDEV_POP', doc: 'stddev_pop(column)，计算总体标准差', support: ['MySQL', 'Oracle', 'PostgreSQL'] },
  { name: 'STDDEV_SAMP', doc: 'stddev_samp(column)，计算样本标准差', support: ['MySQL', 'Oracle', 'PostgreSQL'] },
  { name: 'JSON_ARRAYAGG', doc: 'json_arrayagg(column)，将列的值聚合成 JSON 数组（MySQL 专用）', support: ['MySQL'] },
  { name: 'JSON_OBJECTAGG', doc: 'json_objectagg(key_column, value_column)，将键值对聚合成 JSON 对象（MySQL、PostgreSQL 支持）', support: ['MySQL', 'PostgreSQL'] },
  { name: 'CORR', doc: 'corr(column1, column2)，计算相关系数', support: ['Oracle', 'PostgreSQL'] },
  { name: 'COVAR_POP', doc: 'covar_pop(column1, column2)，计算总体协方差', support: ['Oracle', 'PostgreSQL'] },
  { name: 'COVAR_SAMP', doc: 'covar_samp(column1, column2)，计算样本协方差', support: ['Oracle', 'PostgreSQL'] },
  { name: 'PERCENTILE_CONT', doc: 'percentile_cont(percentile) WITHIN GROUP (ORDER BY column)，计算连续分位数', support: ['Oracle', 'PostgreSQL'] },
  { name: 'PERCENTILE_DISC', doc: 'percentile_disc(percentile) WITHIN GROUP (ORDER BY column)，计算离散分位数', support: ['Oracle', 'PostgreSQL'] },
  { name: 'NTILE', doc: 'ntile(n) OVER (PARTITION BY column ORDER BY column)，将数据分为 n 组', support: ['Oracle', 'PostgreSQL'] },
  { name: 'FIRST_VALUE', doc: 'first_value(column) OVER (PARTITION BY column ORDER BY column)，获取分组中第一个值', support: ['Oracle', 'PostgreSQL'] },
  { name: 'LAST_VALUE', doc: 'last_value(column) OVER (PARTITION BY column ORDER BY column)，获取分组中最后一个值', support: ['Oracle', 'PostgreSQL'] },
  { name: 'MODE', doc: 'mode() WITHIN GROUP (ORDER BY column)，找出出现频率最高的值', support: ['Oracle', 'PostgreSQL'] },
  { name: 'REGR_SLOPE', doc: 'regr_slope(y_column, x_column)，返回线性回归斜率', support: ['Oracle', 'PostgreSQL'] },
  { name: 'REGR_INTERCEPT', doc: 'regr_intercept(y_column, x_column)，返回线性回归截距', support: ['Oracle', 'PostgreSQL'] },
  { name: 'REGR_COUNT', doc: 'regr_count(y_column, x_column)，返回回归分析中参与计算的点数', support: ['Oracle', 'PostgreSQL'] },
  { name: 'REGR_R2', doc: 'regr_r2(y_column, x_column)，返回线性回归的 R 平方值', support: ['Oracle', 'PostgreSQL'] },
  { name: 'REGR_AVGX', doc: 'regr_avgx(y_column, x_column)，返回自变量的平均值', support: ['Oracle', 'PostgreSQL'] },
  { name: 'REGR_AVGY', doc: 'regr_avgy(y_column, x_column)，返回因变量的平均值', support: ['Oracle', 'PostgreSQL'] },
  { name: 'REGR_SXX', doc: 'regr_sxx(y_column, x_column)，返回自变量的平方和', support: ['Oracle', 'PostgreSQL'] },
  { name: 'REGR_SYY', doc: 'regr_syy(y_column, x_column)，返回因变量的平方和', support: ['Oracle', 'PostgreSQL'] },
  { name: 'REGR_SXY', doc: 'regr_sxy(y_column, x_column)，返回自变量和因变量的协方差', support: ['Oracle', 'PostgreSQL'] },
  { name: 'BIT_AND', doc: 'bit_and(column)，按位与操作聚合值', support: ['MySQL', 'PostgreSQL'] },
  { name: 'BIT_OR', doc: 'bit_or(column)，按位或操作聚合值', support: ['MySQL', 'PostgreSQL'] },
  { name: 'BOOL_AND', doc: 'bool_and(column)，返回布尔列的逻辑与', support: ['PostgreSQL'] },
  { name: 'BOOL_OR', doc: 'bool_or(column)，返回布尔列的逻辑或', support: ['PostgreSQL'] },
  { name: 'ARRAY_AGG', doc: 'array_agg(column)，将列的值聚合成数组', support: ['PostgreSQL'] },
  { name: 'XMLAGG', doc: 'xmlagg(column)，将列的值聚合成 XML（Oracle 专用）', support: ['Oracle'] },
  { name: 'PERCENT_RANK', doc: 'percent_rank() OVER (PARTITION BY column ORDER BY column)，计算百分比排名', support: ['Oracle', 'PostgreSQL'] },
  { name: 'CUME_DIST', doc: 'cume_dist() OVER (PARTITION BY column ORDER BY column)，计算累积分布值', support: ['Oracle', 'PostgreSQL'] },
  { name: 'DENSE_RANK', doc: 'dense_rank() OVER (PARTITION BY column ORDER BY column)，计算密集排名', support: ['Oracle', 'PostgreSQL'] },
  { name: 'RANK', doc: 'rank() OVER (PARTITION BY column ORDER BY column)，计算排名（有跳跃）', support: ['Oracle', 'PostgreSQL'] },
  { name: 'LEAD', doc: 'lead(column, offset) OVER (PARTITION BY column ORDER BY column)，获取后续的第 offset 行值', support: ['Oracle', 'PostgreSQL'] },
  { name: 'LAG', doc: 'lag(column, offset) OVER (PARTITION BY column ORDER BY column)，获取前 offset 行值', support: ['Oracle', 'PostgreSQL'] },
  // 添加更多函数以达到 100 个...
]